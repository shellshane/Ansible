---
# Create VPC
- name: CREATING VPC {{ vpc.name }} IN {{ vpc.region }}
  ec2_vpc_net:
    name: "{{ vpc.name }}"
    cidr_block: "{{ vpc.cidr }}"
    region: "{{ vpc.region }}"
    tags:
      Creator: "{{ creator }}" 
  register: vpc_details

# Create public subnet AZ-1
- name: CREATING SUBNET {{ pub_sub_az_1.name }} IN {{ vpc.az_1 }}
  ec2_vpc_subnet:
    state: present
    vpc_id: "{{ vpc_details.vpc.id }}"
    az: "{{ vpc.az_1 }}"
    cidr: "{{ pub_sub_az_1.cidr }}"
    resource_tags:
      Name: "{{ pub_sub_az_1.name }}"
      Creator: "{{ creator }}"
  register: pub_sub_az_1_details

# Create public subnet AZ-2
- name: CREATING SUBNET {{ pub_sub_az_2.name }} IN {{ vpc.az_2 }}
  ec2_vpc_subnet:
    state: present
    vpc_id: "{{ vpc_details.vpc.id }}"
    az: "{{ vpc.az_2 }}"
    cidr: "{{ pub_sub_az_2.cidr }}"
    resource_tags:
      Name: "{{ pub_sub_az_2.name }}"
      Creator: "{{ creator }}"
  register: pub_sub_az_2_details

# Create private subnet AZ-1
- name: CREATING SUBNET {{ priv_sub_az_1.name }} IN {{ vpc.az_1 }}
  ec2_vpc_subnet:
    state: present
    vpc_id: "{{ vpc_details.vpc.id }}"
    az: "{{ vpc.az_1 }}"
    cidr: "{{ priv_sub_az_1.cidr }}"
    resource_tags:
      Name: "{{ priv_sub_az_1.name }}"
      Creator: "{{ creator }}"
  register: priv_sub_az_1_details

# Create private subnet AZ-2
- name: CREATING SUBNET {{ priv_sub_az_2.name }} IN {{ vpc.az_2 }}
  ec2_vpc_subnet:
    state: present
    vpc_id: "{{ vpc_details.vpc.id }}"
    az: "{{ vpc.az_2 }}"
    cidr: "{{ priv_sub_az_2.cidr }}"
    resource_tags:
      Name: "{{ priv_sub_az_2.name }}"
      Creator: "{{ creator }}"
  register: priv_sub_az_2_details

# Creating initial bastion security group
- name: CREATING INITIAL BASTION SECURITY GROUP {{ sg.initial_name }}
  ec2_group:
    name: "{{ sg.initial_name }}"
    description: "{{ sg.initial_description }}"
    vpc_id: "{{ vpc_details.vpc.id }}"
    tags:
      Creator: "{{ creator }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ range.ssh }}"

# Creating production bastion server security group
- name: CREATING PROD BASTION SECURITY GROUP {{ sg.prod_name }}
  ec2_group:
    name: "{{ sg.prod_name }}"
    description: "{{ sg.prod_description }}"
    vpc_id: "{{ vpc_details.vpc.id }}"
    tags:
      Creator: "{{ creator }}"
    rules:
      - proto: tcp
        from_port: "{{ prod_ssh_port }}"
        to_port: "{{ prod_ssh_port }}"
        cidr_ip: "{{ range.ssh }}"

- name: CREATING WEB SERVER SECURITY GROUP {{ sg.web_name }}
  ec2_group:
    name: "{{ sg.web_name }}"
    description: "{{ sg.web_description }}"
    vpc_id: "{{ vpc_details.vpc.id }}"
    tags:
      Creator: "{{ creator }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ vpc.cidr }}"
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: "{{ range.inet }}"
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: "{{ range.inet }}"

# Creating backend security group
- name: CREATING BACKEND SECURITY GROUP {{ sg.back_name }}
  ec2_group:
    name: "{{ sg.back_name }}"
    description: "{{ sg.back_description }}"
    vpc_id: "{{ vpc_details.vpc.id }}"
    tags:
      Creator: "{{ creator }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ vpc.cidr }}"

# Creating internet gateway
- name: CREATING INTERNET GATEWAY {{ igw_name }}
  ec2_vpc_igw:
    vpc_id: "{{ vpc_details.vpc.id }}"
    state: present
    tags:
      Name: "{{ igw_name }}"
      Creator: "{{ creator }}"
  register: igw_details

# Create route table for public subnets
- name: CREATING PUBLIC ROUTE TABLE
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_details.vpc.id }}"
    region: "{{ vpc.region }}"
    tags:
      Name: PublicSubnets
      Creator: "{{ creator }}"
    subnets: 
      - "{{ pub_sub_az_1_details.subnet.id }}"
      - "{{ pub_sub_az_2_details.subnet.id }}"
    routes:
      - dest: "{{ range.inet }}"
        gateway_id: "{{ igw_details.gateway_id }}"

# Create route table for private subnets
- name: CREATING PRIVATE ROUTE TABLE
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_details.vpc.id }}"
    region: "{{ vpc.region }}"
    tags:
      Name: PrivateSubnets
      Creator: "{{ creator }}"
    subnets: 
      - "{{ priv_sub_az_1_details.subnet.id }}"
      - "{{ priv_sub_az_2_details.subnet.id }}"
    routes:
      - dest: "{{ vpc.cidr }}"
        gateway_id: local

# Create network access control list
- name: CREATING "{{ nacl_name }}"
  ec2_vpc_nacl:
    vpc_id: "{{ vpc_details.vpc.id }}"
    name: "{{ nacl_name }}"
    region: "{{ vpc.region }}" 
    subnets: [
        "{{ pub_sub_az_1_details.subnet.id }}", 
        "{{ pub_sub_az_2_details.subnet.id }}",
        "{{ priv_sub_az_1_details.subnet.id }}", 
        "{{ priv_sub_az_2_details.subnet.id }}"
    ]
    tags:
      Name: "{{ nacl_name }}"
      Creator: "{{ creator }}"
    ingress: [
        [100, 'tcp', 'allow', "{{ range.ssh }}", null, null, 22, 22],
        [200, 'tcp', 'allow', "{{ range.ssh }}", null, null, "{{ prod_ssh_port }}", "{{ prod_ssh_port }}"],
        [300, 'tcp', 'allow', "{{ range.inet }}", null, null, 80, 80],
        [400, 'tcp', 'allow', "{{ range.inet }}", null, null, 443, 443],
        [500, 'tcp', 'allow', "{{ range.inet }}", null, null, 1024, 65535]
    ]
    egress: [
        [100, 'all', 'allow', "{{ range.inet }}", null, null, null, null]
    ]
    state: 'present'

