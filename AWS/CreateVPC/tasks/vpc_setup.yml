---
#Create VPC
- name: Create VPC
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr_block }}"
    region: "{{ aws_region }}"
  register: vpc_details

# Create public subnet
- name: Creating public subnet
  ec2_vpc_subnet:
    state: present
    vpc_id: "{{ vpc_details.vpc.id }}"
    cidr: "{{ pub_subnet_cidr }}"
  register: pub_subnet_details

# Create private subnet
- name: Creating private subnet
  ec2_vpc_subnet:
    state: present
    vpc_id: "{{ vpc_details.vpc.id }}"
    cidr: "{{ priv_subnet_cidr }}"
  register: priv_subnet_details

# Creating initial security group
- name: Creating initial server security group
  ec2_group:
    name: "{{ aws_initial_sg_name }}"
    description: "{{ aws_initial_sg_description }}"
    vpc_id: "{{ vpc_details.vpc.id }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0

# Creating production server security group
- name: Creating production server security group
  ec2_group:
    name: "{{ aws_prod_sg_name }}"
    description: "{{ aws_prod_sg_description }}"
    vpc_id: "{{ vpc_details.vpc.id }}"
    rules:
      - proto: tcp
        from_port: "{{ aws_prod_sg_ssh_port }}"
        to_port: "{{ aws_prod_sg_ssh_port }}"
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0

# Creating internet gateway
- name: Creating internet gateway
  ec2_vpc_igw:
    vpc_id: "{{ vpc_details.vpc.id }}"
    state: present
  register: igw_details

# Create route table for public subnet
- name: Setting up public subnet route
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_details.vpc.id }}"
    region: "{{ aws_region }}"
    tags:
      Name: PublicSubnet
    subnets: "{{ pub_subnet_details.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw_details.gateway_id }}"

# Create route table for private subnet
- name: Setting up private subnet route
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_details.vpc.id }}"
    region: "{{ aws_region }}"
    tags:
      Name: PrivateSubnet
    subnets: "{{ priv_subnet_details.subnet.id }}"
    routes:
      - dest: 10.0.0.0/16
        gateway_id: local

# Create network access control list
- name: "Create a NACL to restrict traffic to desired ports"
  ec2_vpc_nacl:
    vpc_id: "{{ vpc_details.vpc.id }}"
    name: vpc_nacl
    region: "{{ aws_region }}" 
    subnets: ["{{ pub_subnet_details.subnet.id }}", "{{ priv_subnet_details.subnet.id }}"]
    ingress: [
        [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22],
        [200, 'tcp', 'allow', '0.0.0.0/0', null, null, "{{ aws_prod_sg_ssh_port }}", "{{ aws_prod_sg_ssh_port }}"],
        [300, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80],
        [400, 'tcp', 'allow', '0.0.0.0/0', null, null, 443, 443],
    ]
    egress: [
        [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
    ]
    state: 'present'

